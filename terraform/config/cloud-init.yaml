#cloud-config

write_files:
  - owner: __VMUSER__:__VMUSER__
    path: /home/__VMUSER__/azp/start.sh
    permissions: '0744'
    defer: true
    content: |
      set -e

      if [ -z "$AZP_URL" ]; then
        echo 1>&2 "error: missing AZP_URL environment variable"
        exit 1
      fi

      if [ -z "$AZP_TOKEN_FILE" ]; then
        if [ -z "$AZP_TOKEN" ]; then
          echo 1>&2 "error: missing AZP_TOKEN environment variable"
          exit 1
        fi

        AZP_TOKEN_FILE=.token
        echo -n $AZP_TOKEN > "$AZP_TOKEN_FILE"

        # Adjust permissions and ownership
        chmod u+w "$AZP_TOKEN_FILE"
        chown __VMUSER__:__VMUSER__ "$AZP_TOKEN_FILE"

      fi

      unset AZP_TOKEN

      if [ -n "$AZP_WORK" ]; then
        mkdir -p "$AZP_WORK"
      fi

      export AGENT_ALLOW_RUNASROOT="1"

      cleanup() {
        if [ -e config.sh ]; then
          print_header "Cleanup. Removing Azure Pipelines agent..."

          # If the agent has some running jobs, the configuration removal process will fail.
          # So, give it some time to finish the job.
          while true; do
            ./config.sh remove --unattended --auth PAT --token $(cat "$AZP_TOKEN_FILE") && break

            echo "Retrying in 30 seconds..."
            sleep 30
          done
        fi
      }

      print_header() {
        lightcyan='\033[1;36m'
        nocolor='\033[0m'
        echo -e "${lightcyan}$1${nocolor}"
      }

      # Let the agent ignore the token env variables
      export VSO_AGENT_IGNORE=AZP_TOKEN,AZP_TOKEN_FILE

      source ./env.sh

      trap 'cleanup; exit 0' EXIT
      trap 'cleanup; exit 130' INT
      trap 'cleanup; exit 143' TERM

      print_header "1. Configuring Azure Pipelines agent..."

      ./config.sh --unattended \
        --agent "${AZP_AGENT_NAME:-$(hostname)}" \
        --url "$AZP_URL" \
        --auth PAT \
        --token $(cat "$AZP_TOKEN_FILE") \
        --pool "${AZP_POOL:-Default}" \
        --work "${AZP_WORK:-_work}" \
        --replace \
        --acceptTeeEula & wait $!

      print_header "2. Running Azure Pipelines agent..."

      trap 'cleanup; exit 0' EXIT
      trap 'cleanup; exit 130' INT
      trap 'cleanup; exit 143' TERM

      chmod +x ./run.sh

      # To be aware of TERM and INT signals call run.sh
      # Running it with the --once flag at the end will shut down the agent after the build is executed
       ./run.sh "$@" & wait $!

runcmd:
  - chown -R __VMUSER__ home/__VMUSER__/azp
  - cd home/__VMUSER__/azp
  - curl -LSs "https://vstsagentpackage.azureedge.net/agent/3.220.0/vsts-agent-__TARGETARCH__-3.220.0.tar.gz" | tar -xz
  # ------------------------------->Also test the following command with "exec" <----------------------------------------
  - su - __VMUSER__ -c 'export AZP_URL="__AZP_URL__" AZP_TOKEN="__AZP_TOKEN__" AZP_POOL="__AZP_POOL__" AZP_AGENT_NAME="__AZP_AGENT_NAME__" && cd /home/__VMUSER__/azp && ./start.sh'
# rest of the configuration is done via ansible
  

